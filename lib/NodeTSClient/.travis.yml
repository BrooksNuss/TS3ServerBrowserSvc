sudo: false
language: csharp

matrix:
  include:
    - dotnet: 2.1.4
      mono: none
      env: DOTNETCORE=1
    - mono: latest
      node_js: node

notifications:
  email: false

branches:
  only:
    - master
    - develop

addons:
  apt:
    packages:
    - zip
    - gzip
    - tar
    - curl

cache:
  directories:
    - "WebInterface/node_modules"

git:
  depth: 9999999

# TODO: add test runner for dotnet core too
install:
  - |
    if [[ $DOTNETCORE = 1 ]]; then
      echo "dotnet core"
      dotnet restore TS3AudioBot.sln
    else
      echo "mono"
      nuget restore TS3AudioBot.sln
      nuget install NUnit.Runners -OutputDirectory nunit
    fi
  - "cd WebInterface"
  - "npm install"
  - "cd .."

script:
  - |
    if [[ $DOTNETCORE = 1 ]]; then
      dotnet build --framework netcoreapp2.0 --configuration Release TS3AudioBot
    else
      if command -v msbuild; then
        buildtool="msbuild"
      elif command -v xbuild; then
        buildtool="xbuild"
      else
        echo "No mono build tool found!"
        false
      fi
      "${buildtool}" /p:Configuration=Release /p:TargetFramework=net46 TS3AudioBot.sln
      mono ./nunit/NUnit.ConsoleRunner.*.*.*/tools/nunit3-console.exe ./TS3ABotUnitTests/bin/Release/net46/TS3ABotUnitTests.dll
    fi
  - "cd WebInterface"
  - "npm run publish"
  - "cd .."

after_success:
  - |
    if [[ $DOTNETCORE = 1 ]]; then
      echo "No Task!"
    else
      export MAIN_DIR=`pwd`
      cd ./TS3AudioBot/bin/Release/net46
      cp -r "${MAIN_DIR}/WebInterface/build" "./WebInterface"
      ls
      zip -r TS3AudioBot.zip NLog.config *.exe *.dll x64 x86 WebInterface
      export version=`mono TS3AudioBot.exe --version | grep "Version: "`
      curl -I -H "Content-Type: application/zip" -X PUT "https://splamy.de/api/nightly/ts3ab/${TRAVIS_BRANCH}?token=${uploadkey}&filename=TS3AudioBot.zip&commit=${TRAVIS_COMMIT}&version=${version:9}" --upload-file ./TS3AudioBot.zip
      cd "$MAIN_DIR"
    fi

after_script:
  - chmod u+x ts3notify.sh
  - ./ts3notify.sh
